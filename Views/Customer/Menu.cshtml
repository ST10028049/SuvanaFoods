@model IEnumerable<SuvanaFoods.Models.FoodItem>
@{
    ViewBag.Title = "Menu";
}

<!-- You can add a body style in the <head> section of your layout file or directly here -->
<style>
    body {
        margin-top: 80px; /* Add top margin to the body */
    }
</style>

<div class="container mt-4">
    <h2 class="text-center">Menu</h2> <!-- Centered heading -->

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="food-item text-center border rounded p-3">
                    <img src="@item.ImageUrl" alt="@item.Name" class="food-image img-fluid rounded" />
                    <h5 class="mt-2">@item.Name</h5>
                    <span class="price d-block mb-2">@item.Price?.ToString("C")</span>
                    <button class="btn btn-success add-to-cart" data-item-id="@item.FoodItemId">Add to Cart</button>
                    <p class="description mt-2">@item.Description</p>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .food-item {
        transition: transform 0.3s;
    }

        .food-item:hover {
            transform: scale(1.05); /* Zoom effect on hover */
        }

    .food-image {
        width: 100%;
        height: 200px; /* Fixed height for images */
        object-fit: cover; /* Crop images nicely */
    }

    .price {
        font-weight: bold;
        color: #28a745; /* Green color for prices */
    }

    .description {
        font-size: 0.9em;
        color: #777; /* Lighter color for description */
    }
</style>

@section Scripts {
    <script>
        // Event listener for Add to Cart button
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', function () {
                const itemId = this.getAttribute('data-item-id');

                fetch(`/Customer/AddToCart?foodItemId=${itemId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '@Html.AntiForgeryToken()' // Include CSRF token for security
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Item added to cart!');
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => console.error('Error adding to cart:', error));
            });
        });
    </script>
}

